[
  {
    "scriptPage": "https://github.com/m8sec/CrossLinked",
    "scriptName": "CrossLinked",
    "scriptDescription": "CrossLinked is a LinkedIn enumeration tool that uses search engine scraping to collect valid employee names from an organization. This technique provides accurate results without the use of API keys.",
    "scriptInputTags": ["domain", "company", "email"],
    "scriptOutputTags": ["emails", "linkedin", "position", "full-name"],
    "scriptSpeed": "4",
    "scriptSuccessRate": "3",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\social\\crosslinked\\crosslinked.py",
    "scriptFlags": [
      {
        "flag": "-f",
        "name": "Email Format",
        "description": "Provide the email format of the company like in this example '{first}.{last}@domain.com'. Do not forget the quotation marks.",
        "type": "flag",
        "required": true
      },
      {
        "name": "Timeout",
        "description": "Max timeout per search (Default=15)",
        "type": "checkbox",
        "required": false
      },
      {
        "name": "Jitter",
        "description": "Jitter between requests (Default=1)",
        "type": "checkbox",
        "required": false
      },
      {
        "name": "Company Name",
        "description": "Provide the company name as used on LinkedIn.",
        "type": "argument",
        "required": true
      }
    ],
    "scriptColumns": [
      { "name": "Datetime", "type": "string" },
      { "name": "Search", "type": "string" },
      { "name": "First Name", "type": "string" },
      { "name": "Last Name", "type": "string" },
      { "name": "Title", "type": "string" },
      { "name": "URL", "type": "string" },
      { "name": "Raw Text", "type": "string" },
      { "name": "Email", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "1",
    "scriptOutputColsSeparator": "\"([^\"]*)\"",
    "scriptVisualizers": [
      {
        "type": "table",
        "labelXColumn": "Datetime",
        "labelYColumn": "Search",
        "labelZColumn": "First Name"
      }
    ],
    "scriptOutputFormat": { "type": "file", "name": "names.csv" }
  },
  {
    "scriptPage": "https://github.com/un1k0n/GitStalk",
    "scriptName": "GitStalk",
    "scriptDescription": "Uses the public version of the GitHub API to grab all repos from users and inspect each one looking for info in commits. It will grab info about all users and collaborators from the repos.",
    "scriptInputTags": ["username"],
    "scriptOutputTags": ["email", "collabs", "names"],
    "scriptSpeed": "4",
    "scriptSuccessRate": "1",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\repositories\\gitstalk\\gitstalk.py",
    "scriptFlags": [
      {
        "name": "Username",
        "description": "Provide the GitHub username you wish to query.",
        "type": "argument",
        "required": true
      },
      {
        "name": "GitHub Bearer Token",
        "description": "Include your bearer token to increase the rate limit.",
        "type": "argument",
        "required": false
      }
    ],
    "scriptColumns": [
      { "name": "Full Name", "type": "string" },
      { "name": "Email", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "2",
    "scriptOutputColsSeparator": "(?<=\\|)[^|]+|[^|]+(?=\\|)",
    "scriptVisualizers": [{ "type": "table", "labelXColumn": "Emails" }],
    "scriptOutputFormat": { "type": "stdout", "name": "" }
  },
  {
    "scriptPage": "https://github.com/dievus/msdorkdump",
    "scriptName": "MsDorkDump",
    "scriptDescription": "MSDorkDump is a Google Dork File Finder that queries a specified domain name and variety of file extensions (pdf, doc, docx, etc), downloads , and then runs Exiftool on them to enumerate metadata.",
    "scriptInputTags": ["domain"],
    "scriptOutputTags": ["documents", "office", "pdf", "files"],
    "scriptSpeed": "2",
    "scriptSuccessRate": "3",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\websites\\msdorkdump\\msdorkdump.py",
    "scriptFlags": [
      {
        "flag": "-t",
        "name": "Domain",
        "description": "Provide the domain you wish to query.",
        "type": "flag",
        "required": true
      }
    ],
    "scriptColumns": [{ "name": "Document", "type": "string" }],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "0",
    "scriptOutputColsSeparator": "https?://(.+?)*",
    "scriptVisualizers": [{ "type": "table", "labelXColumn": "Document" }],
    "scriptOutputFormat": { "type": "stdout", "name": "" }
  },
  {
    "scriptPage": "https://github.com/jakecreps/poastal",
    "scriptName": "Poastal",
    "scriptDescription": "Poastal is an email OSINT tool that provides valuable information on any email address. With Poastal, you can easily input an email address and it will quickly provide various social accounts used.",
    "scriptInputTags": ["email"],
    "scriptOutputTags": ["socials"],
    "scriptSpeed": "3",
    "scriptSuccessRate": "3",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\social\\poastal\\backend\\cli.py",
    "scriptFlags": [
      {
        "name": "Email",
        "description": "Provide the email you wish to query.",
        "type": "argument",
        "required": true
      }
    ],
    "scriptColumns": [
      { "name": "Facebook", "type": "string" },
      { "name": "Twitter", "type": "string" },
      { "name": "Snapchat", "type": "string" },
      { "name": "Rumble", "type": "string" },
      { "name": "MeWe", "type": "string" },
      { "name": "Imgur", "type": "string" },
      { "name": "Adobe", "type": "string" },
      { "name": "Wordpress", "type": "string" },
      { "name": "Duolingo", "type": "string" },
      { "name": "Hulu", "type": "string" },
      { "name": "Rubmaps", "type": "string" },
      { "name": "Github", "type": "string" },
      { "name": "Gravatar", "type": "string" },
      { "name": "Discord", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "0",
    "scriptOutputColsSeparator": "(?<=\"(?:Facebook|Twitter|Snapchat|Rumble|MeWe|Imgur|Adobe|Wordpress|Duolingo|Hulu|Rubmaps|Github|Gravatar|Discord)\": \")[^\"]+",
    "scriptVisualizers": [
      {
        "type": "table",
        "labelXColumn": "Facebook",
        "labelYColumn": "Twitter",
        "labelZColumn": "Snapchat"
      }
    ],
    "scriptOutputFormat": { "type": "stdout", "name": "" }
  },
  {
    "scriptPage": "https://github.com/iojw/socialscan",
    "scriptName": "SocialScan",
    "scriptDescription": "Given an email address or username, socialscan returns whether it is available, taken or invalid on online platforms. Uses different techniques from Sherlock.",
    "scriptInputTags": ["email"],
    "scriptOutputTags": ["socials"],
    "scriptSpeed": "4",
    "scriptSuccessRate": "3",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\social\\socialscan\\socialscan\\__main__.py",
    "scriptFlags": [
      {
        "name": "Email",
        "description": "Provide the email address you wish to query.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Available Only",
        "description": "Print only emails that are not in use.",
        "type": "checkbox",
        "required": false
      }
    ],
    "scriptColumns": [
      { "name": "Firefox", "type": "string" },
      { "name": "GitHub", "type": "string" },
      { "name": "Pinterest", "type": "string" },
      { "name": "Tumblr", "type": "string" },
      { "name": "Twitter", "type": "string" },
      { "name": "Instagram", "type": "string" },
      { "name": "LastFM", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "3",
    "scriptOutputColsSeparator": "(?<=(?:Firefox|GitHub|Pinterest|Tumblr|Twitter|Instagram|Lastfm): )[^,]+",
    "scriptVisualizers": [
      {
        "type": "table",
        "labelXColumn": "Firefox",
        "labelYColumn": "GitHub",
        "labelZColumn": "Pinterest"
      }
    ],
    "scriptOutputFormat": { "type": "stdout", "name": "" }
  },
  {
    "scriptPage": "https://haveibeenpwned.com/",
    "scriptName": "Have-I-Been-Pwned",
    "scriptDescription": "Public databases of breached accounts. Have-I-Been-Pwned allows you to search across multiple data breaches to see if your email address has been compromised.",
    "scriptInputTags": ["username", "email"],
    "scriptOutputTags": ["breach"],
    "scriptSpeed": "4",
    "scriptSuccessRate": "4",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\social\\have-i-been-pwned\\__main__.py",
    "scriptFlags": [
      {
        "name": "API Key",
        "description": "API Key used for access to the Have-I-Been-Pwned service. For more details, please check author page.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Email",
        "description": "Provide the email address you wish to query for breaches.",
        "type": "argument",
        "required": true
      }
    ],
    "scriptColumns": [
      { "name": "Email", "type": "string" },
      { "name": "Is Breached", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "0",
    "scriptOutputColsSeparator": "[^ ]+",
    "scriptVisualizers": [{ "type": "table", "labelXColumn": "Is Breached" }],
    "scriptOutputFormat": { "type": "stdout", "name": "" }
  },
  {
    "scriptPage": "",
    "scriptName": "Photon",
    "scriptDescription": "Relatively fast crawler designed for web OSINT. Extracts internal, external, fuzzable links as well as files from a target. ",
    "scriptInputTags": ["URL"],
    "scriptOutputTags": ["files", "documents", "URLs"],
    "scriptSpeed": "2",
    "scriptSuccessRate": "4",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\websites\\photon\\photon.py",
    "scriptFlags": [
      {
        "flag": "-u",
        "name": "Target URL",
        "description": "Provide the target URL that you wish to query for data.",
        "type": "flag",
        "required": true
      }
    ],
    "scriptColumns": [
      { "name": "External Links", "type": "string" },
      { "name": "Images", "type": "string" },
      { "name": "Fuzzable Links", "type": "string" },
      { "name": "Internal Links", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "5",
    "scriptOutputColsSeparator": "(https?://\\S+)|None",
    "scriptVisualizers": [
      {
        "type": "table",
        "labelXColumn": "External Links",
        "labelYColumn": "Images",
        "labelZColumn": "Fuzzable Links"
      }
    ],
    "scriptOutputFormat": { "type": "stdout", "name": "" }
  },
  {
    "scriptPage": "",
    "scriptName": "Webenum",
    "scriptDescription": "A simple web enumeration tool that extracts subdomains of a URL, certificate data, DNS data and whois data.",
    "scriptInputTags": ["URL"],
    "scriptOutputTags": ["subdomains", "URLs", "cert", "dns", "whois"],
    "scriptSpeed": "3",
    "scriptSuccessRate": "3",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\websites\\webenum\\w3b3num.py",
    "scriptFlags": [
      {
        "name": "Target URL",
        "description": "Provide the URL using the following format \"https://{domain}.com\".",
        "type": "argument",
        "required": true
      }
    ],
    "scriptColumns": [
      { "name": "Subdomains", "type": "string" },
      { "name": "Certificate Information", "type": "string" },
      { "name": "DNS Record", "type": "string" },
      { "name": "Whois Information", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "0",
    "scriptOutputColsSeparator": "[^;]+",
    "scriptVisualizers": [
      {
        "type": "table",
        "labelXColumn": "Subdomains",
        "labelYColumn": "Certificate Information",
        "labelZColumn": "DNS Record"
      }
    ],
    "scriptOutputFormat": { "type": "file", "name": "output.txt" }
  },
  {
    "scriptPage": "https://github.com/Ekultek/GitRekt",
    "scriptName": "GitRekt",
    "scriptDescription": "GitRekt is a tool that can be used to scrape a websites .git folder. By default GitRekt will search for email addresses and URL's that should otherwise be hidden.",
    "scriptInputTags": ["URL"],
    "scriptOutputTags": ["URLs", "emails"],
    "scriptSpeed": "3",
    "scriptSuccessRate": "1",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\repositories\\gitrekt\\gitrekt.py",
    "scriptFlags": [
      {
        "flag": "-u",
        "name": "Target URL",
        "description": "Provide the URL you wish to query. Use the following format \"https://{domain}.com\".",
        "type": "flag",
        "required": true
      }
    ],
    "scriptColumns": [
      { "name": "URLs", "type": "string" },
      { "name": "Emails", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "0",
    "scriptOutputColsSeparator": "\\S+",
    "scriptVisualizers": [
      { "type": "table", "labelXColumn": "Emails", "labelYColumn": "URLs" }
    ],
    "scriptOutputFormat": { "type": "file", "name": "results.txt" }
  },
  {
    "scriptPage": "",
    "scriptName": "Bait",
    "scriptDescription": "Use this script to send emails to targets using an SMTP server. This scripts accepts HTML pages as payloads which makes it ideal for phishing scenarios.",
    "scriptInputTags": ["SMTP", "sender", "receiver", "payload", "message"],
    "scriptOutputTags": ["status"],
    "scriptSpeed": "4",
    "scriptSuccessRate": "4",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\phishing\\Bait\\script.py",
    "scriptFlags": [
      {
        "name": "SMTP Server",
        "description": "Provide the SMTP server used to send the email.",
        "type": "argument",
        "required": true
      },
      {
        "name": "SMTP Server Port",
        "description": "Provide the SMTP server port used to send the email.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Sender Email",
        "description": "Provide the sender email address.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Sender Password",
        "description": "Provide the sender password. If you are using Gmail, please generate a token as password.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Recipient Email",
        "description": "Provide the recipient email address.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Subject",
        "description": "Describe the subject of the email.",
        "type": "argument",
        "required": true
      },
      {
        "flag": "-f",
        "name": "Payload",
        "description": "Add a HTML payload.",
        "type": "flag",
        "required": true
      }
    ],
    "scriptColumns": [
      { "name": "Sender", "type": "string" },
      { "name": "Receiver", "type": "string" },
      { "name": "Status", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "0",
    "scriptOutputColsSeparator": "\\S+",
    "scriptVisualizers": [
      {
        "type": "table",
        "labelXColumn": "Sender",
        "labelYColumn": "Receiver",
        "labelZColumn": "Status"
      }
    ],
    "scriptOutputFormat": { "type": "stdout", "name": "" }
  },
  {
    "scriptPage": "",
    "scriptName": "PhishMailer",
    "scriptDescription": "Generate accurate templates for phishing. Used for generating Gmail alerts for unauthorized logins. Requires recipient accurate data.",
    "scriptInputTags": ["date", "receiver", "location", "time"],
    "scriptOutputTags": ["email", "template", "file"],
    "scriptSpeed": "4",
    "scriptSuccessRate": "4",
    "scriptPath": "C:\\Users\\micul\\Desktop\\license\\product\\data-pilots\\valiant\\tools\\phishing\\PhishMailer\\PhishMailer.py",
    "scriptFlags": [
      {
        "name": "Name",
        "description": "Name of the receiver.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Receiver Email",
        "description": "Receiver email address.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Day",
        "description": "Day of the login. Example: Monday, Tuesday etc.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Date",
        "description": "Provide the date in the format local to the receiver.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Year",
        "description": "Year of the login.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Month",
        "description": "Month of the login.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Country",
        "description": "Country of the login.",
        "type": "argument",
        "required": true
      },
      {
        "name": "City",
        "description": "City of the login",
        "type": "argument",
        "required": true
      },
      {
        "name": "Payload URL",
        "description": "Provide the redirect URL. Prefix with HTTP or HTTPS.",
        "type": "argument",
        "required": true
      },
      {
        "name": "Time",
        "description": "Time of the login. Example: 10:00 AM, 05:00 PM etc.",
        "type": "argument",
        "required": true
      }
    ],
    "scriptColumns": [
      { "name": "SMTP Server", "type": "string" },
      { "name": "SMTP Server Port", "type": "string" },
      { "name": "Receiver Email", "type": "string" },
      { "name": "Subject", "type": "string" },
      { "name": "Template Path", "type": "string" }
    ],
    "scriptExecutable": "python",
    "scriptOutputSkipRows": "0",
    "scriptOutputColsSeparator": "[^,]+",
    "scriptVisualizers": [
      {
        "type": "table",
        "labelXColumn": "SMTP Server",
        "labelYColumn": "SMTP Server Port",
        "labelZColumn": "Receiver Email"
      }
    ],
    "scriptOutputFormat": { "type": "file", "name": "output_stats.txt" }
  }
]
